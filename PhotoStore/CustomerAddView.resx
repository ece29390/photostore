<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        P/+AAD//wAB//+AA///4A///
</value>
  </data>
</root>