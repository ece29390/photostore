<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="colId.UserAddedColumn" type="System.Boolean, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="colTransactionDate.UserAddedColumn" type="System.Boolean, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="colCode.UserAddedColumn" type="System.Boolean, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="colMothersName.UserAddedColumn" type="System.Boolean, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="colBalance.UserAddedColumn" type="System.Boolean, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="colTotalAmount.UserAddedColumn" type="System.Boolean, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="colFullName.UserAddedColumn" type="System.Boolean, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="$this.Locked" type="System.Boolean, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        AA///AA///8Af///////////
</value>
  </data>
</root>