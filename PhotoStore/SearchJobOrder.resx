<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="colDateCreated.UserAddedColumn" type="System.Boolean, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="colOrderNumber.UserAddedColumn" type="System.Boolean, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="colMothersName.UserAddedColumn" type="System.Boolean, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="colQuantity.UserAddedColumn" type="System.Boolean, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="colParticulars.UserAddedColumn" type="System.Boolean, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="colJobOrderId.UserAddedColumn" type="System.Boolean, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="colJobOrderNumber.UserAddedColumn" type="System.Boolean, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btnShowTally.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        R0lGODlhIAAgAPcAAPz8/M6VmMaSlvz7/Pv7/AophwotjgoriwoqiSg6avj5/AozlgozlQoxkwowkQov
        jyc8cCc8byg8byg8bSg7bPX3/Ao5ngo2mgo1mSU+dCU9ciY9cgo/pwo+pQo9pQo9owo8oQo6ngo5nCVB
        eCVBdyVAdCU/cwpGrgpFrApDrApCqSNDeyRDeiVCeQpPvApOuQpNuApNtwpLtQpKswpIsSJHgSNEfCNF
        e+zy/ApWwgpTwApTvwpQvCBKhyFIhCFIgiJGfuvy/PH1+wph0QpezgpdywpbygpZxh9OjB9MieTu/PD1
        /PT3+wps3wpr3Qpq2wpo2Apn1wpk1gpj0wpgzhtVmRxUmRxTlhxRlB1Rkx1Pjx5PjtLl/OHt/PH2/Ap3
        7Ap06Apy5Qpw4gpv4gpt4BhcpRhaoRlaohpZoBpZnxpXnBpXmxpWmbHU+7nZ/L3b+8Dd/MTf/Mnh/Mri
        /Mnh+8vi+8/k/NHl/NLl+9Tn/Njp/N3s/N/t/OHu/ODt++Lu/Ofx/Ony/Ap+9Ap78Qp57gp57Qp36xVn
        txZlthZltRZksxZjsBdirhdirRdgrBdfqBheprPX/LLW+7XY/LbY/LXX+7fZ/LfZ+7vb+8Xg+8bh/Mfh
        +8zk/M7k+9Pn/NTo/NPn+9Tn+9fp/Nbo+9vr/N/t++Tw/O71/PL3/PH2+/T4/Pb5/BNuwRNtwBNsvhNs
        vRRrvBRquxRquRRpuRRot7rc/L3d/L3d+77d+8Hf+8Lf+8nk/Mrk/Mzk+9Po/Nnr/Nvs/Ofy/Ojy++v0
        /NDn+9fr/Nns/N3u/OLw/O31/Oz0++71++Lw++72/PL3++n0/O32/O72+/n7/Pf7/Pn8/Pn7+/v8/PCl
        mN9HMN1GMNlFMO2jmOqimNdDMNRDMNBAMM5AMMs/MOagmOKfmNEaCs4ZCssYCsc9ML88ML47MLw6MLk6
        ML4WCrsWCrkVCrc4MKsRCqgRCqcQCqUQCq41MK01MKkzMNybmNubmJkNCpYNCpUMCqcyMNWZmP///wAA
        ACH5BAEAAP4ALAAAAAAgACAAAAj/AP0JHEiwoMGDCFkpbOXK1StYsWTNOpRIkaJFixo5cvToEaQyCQGI
        HEmypDUC0hSsqlDhDMJWJWOSPJlyZQU0CF3JlGmtmgKVzrx4UZNT5DVs2bbxTKlSVapTydgghCUyGzly
        2kQKGkToC5gwYsg4gSIlWjIcVhDGEqmtnLluIgcVMvR1TJMnUaYMSTYsyBWEs0Ru6+aNW0lqNVWhWsI3
        ECAsCGnttGZtgLRpK70wHvYsmKksCBFNtpbYC1TOgEwh04JQkUhu38CJE2lZZQVUpjl77tMFCcJFIsGx
        axcOAIGxUoZQKXIkhw4eL/rw2ZMEISOR4dy5OwdAWt4hRIw0/9/hIsaM6cB6IGwkUty5c+OkSVuleAm0
        YY6VSN/zS4/6g46QVJtKqKSyjG6m/OEHf6KM4gNCj4yEEmaqMCFEY6n90QV/o4SCRw0IQSLSOOikc88q
        uJ2iTGeqTUeKKJ7cYQcQCJUBgDXpwBPPOqp4sQN0MtBwQgoqdABCCDLaYQNCZlhDjTryzPOOF83wAEOQ
        KKjAwQcgiHCBHb3UsQJCaVyGzzvv9HNgEJ4x08cepOiRh4x10LHJCAitYVuKyQQSiCmm9HEMML/kwYUd
        nMiRSSYkIMTGSj02w5dn+u1hjCifHMrJHJrokksJCFVRgSr90FNPAMIA2kUpwBTjiyeIcsMaBy64mIDQ
        FbjRk08+9piihAdHXoDBAg04YMABB8DxxhsbIJSFZvXosw8/+oFggbAMNPDAsQgUgEstbkCAkBaSBsAP
        PwK8CYweooBCTCeywnHLG5ZQIgFCW/D1jKqW/iKKL3dwskuncNhSyyWTRDIBQkg882egfPg7Cih2dMKL
        JnHAgQsmllQiSRsUIJSEw4BKJzHFFmOsMccet5EAQj344MMPNQABxA0stDACCSVkoMEGEEQgwQQTUJDA
        ywglrTRCAQEAOw==
</value>
  </data>
</root>